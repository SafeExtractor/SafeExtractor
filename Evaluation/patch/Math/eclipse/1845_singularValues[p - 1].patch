diff --git a/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java b/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
index efbe8a2..87d2e95 100644
--- a/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
+++ b/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
@@ -371,13 +371,14 @@
                 // Perform one qr step.
                 case 3: {
                     // Calculate the shift.
-                    final double maxPm1Pm2 = FastMath.max(FastMath.abs(singularValues[p - 1]),
+                    double var_1845 = singularValues[p - 1];
+					final double maxPm1Pm2 = FastMath.max(FastMath.abs(var_1845),
                                                           FastMath.abs(singularValues[p - 2]));
                     final double scale = FastMath.max(FastMath.max(FastMath.max(maxPm1Pm2,
                                                                                 FastMath.abs(e[p - 2])),
                                                                    FastMath.abs(singularValues[k])),
                                                       FastMath.abs(e[k]));
-                    final double sp = singularValues[p - 1] / scale;
+                    final double sp = var_1845 / scale;
                     final double spm1 = singularValues[p - 2] / scale;
                     final double epm1 = e[p - 2] / scale;
                     final double sk = singularValues[k] / scale;
