diff --git a/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java b/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
index 372c699..0ace4d5 100644
--- a/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
+++ b/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
@@ -207,14 +207,15 @@
         // evaluate first  endpoint
         evaluations.incrementCount();
         y[0] = f.value(x[0]);
-        if (y[0].isZero()) {
+        Dfp var_538 = y[0];
+		if (var_538.isZero()) {
             // return the first endpoint if it is a perfect root.
             return x[0];
         }
 
         int nbPoints;
         int signChangeIndex;
-        if (y[0].multiply(y[1]).negativeOrNull()) {
+        if (var_538.multiply(y[1]).negativeOrNull()) {
 
             // reduce interval if it brackets the root
             nbPoints        = 2;
@@ -236,7 +237,7 @@
                 signChangeIndex = 2;
             } else {
                 throw new NoBracketingException(x[0].toDouble(), x[2].toDouble(),
-                                                y[0].toDouble(), y[2].toDouble());
+                                                var_538.toDouble(), y[2].toDouble());
             }
 
         }
