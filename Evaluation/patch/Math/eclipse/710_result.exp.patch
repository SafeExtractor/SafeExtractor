diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..a3ed118 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -2245,7 +2245,8 @@
     public Dfp dotrap(int type, String what, Dfp oper, Dfp result) {
         Dfp def = result;
 
-        switch (type) {
+        int var_710 = result.exp;
+		switch (type) {
             case DfpField.FLAG_INVALID:
                 def = newInstance(getZero());
                 def.sign = result.sign;
@@ -2278,17 +2279,17 @@
                 break;
 
             case DfpField.FLAG_UNDERFLOW:
-                if ( (result.exp+mant.length) < MIN_EXP) {
+                if ( (var_710+mant.length) < MIN_EXP) {
                     def = newInstance(getZero());
                     def.sign = result.sign;
                 } else {
                     def = newInstance(result);  // gradual underflow
                 }
-                result.exp = result.exp + ERR_SCALE;
+                result.exp = var_710 + ERR_SCALE;
                 break;
 
             case DfpField.FLAG_OVERFLOW:
-                result.exp = result.exp - ERR_SCALE;
+                result.exp = var_710 - ERR_SCALE;
                 def = newInstance(getZero());
                 def.sign = result.sign;
                 def.nans = INFINITE;
