diff --git a/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java b/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
index 36f8bd2..ff58558 100644
--- a/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
+++ b/src/main/java/org/apache/commons/math3/stat/regression/MillerUpdatingRegression.java
@@ -109,17 +109,18 @@
         }
         this.hasIntercept = includeConstant;
         this.nobs = 0;
-        this.d = new double[this.nvars];
-        this.rhs = new double[this.nvars];
-        this.r = new double[this.nvars * (this.nvars - 1) / 2];
-        this.tol = new double[this.nvars];
-        this.rss = new double[this.nvars];
-        this.vorder = new int[this.nvars];
-        this.x_sing = new double[this.nvars];
-        this.work_sing = new double[this.nvars];
-        this.work_tolset = new double[this.nvars];
-        this.lindep = new boolean[this.nvars];
-        for (int i = 0; i < this.nvars; i++) {
+        int var_3954 = this.nvars;
+		this.d = new double[var_3954];
+        this.rhs = new double[var_3954];
+        this.r = new double[var_3954 * (var_3954 - 1) / 2];
+        this.tol = new double[var_3954];
+        this.rss = new double[var_3954];
+        this.vorder = new int[var_3954];
+        this.x_sing = new double[var_3954];
+        this.work_sing = new double[var_3954];
+        this.work_tolset = new double[var_3954];
+        this.lindep = new boolean[var_3954];
+        for (int i = 0; i < var_3954; i++) {
             vorder[i] = i;
         }
         if (errorTolerance > 0) {
