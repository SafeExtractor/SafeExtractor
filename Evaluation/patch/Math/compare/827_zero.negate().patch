diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/827_zero.negate().patch b/Users/safe/paper/Evaluation/patch/Math/ours/827_zero.negate().patch
index 28742aa..8ac74f5 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/827_zero.negate().patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/827_zero.negate().patch
@@ -1,32 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
-index af670fc..2c59127 100644
+index af670fc..6afbbb8 100644
 --- a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
 +++ b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
-@@ -539,7 +539,8 @@
-         }
- 
-         // X == 0
--        if (x.equals(zero)) {
-+        Dfp var_827 = zero.negate();
-+		if (x.equals(zero)) {
-             if (Dfp.copysign(one, x).greaterThan(zero)) {
-                 // X == +0
-                 if (y.greaterThan(zero)) {
-@@ -552,7 +553,7 @@
+@@ -552,7 +552,8 @@
                  if (y.classify() == Dfp.FINITE && y.rint().equals(y) && !y.remainder(two).equals(zero)) {
                      // If y is odd integer
                      if (y.greaterThan(zero)) {
 -                        return x.newInstance(zero.negate());
-+                        return x.newInstance(var_827);
++                        Dfp var_827 = zero.negate();
++						return x.newInstance(var_827);
                      } else {
                          return x.newInstance(x.newInstance((byte)-1, Dfp.INFINITE));
                      }
-@@ -603,7 +604,7 @@
-                     if (y.greaterThan(zero)) {
-                         return x.newInstance(x.newInstance((byte)-1, Dfp.INFINITE));
-                     } else {
--                        return x.newInstance(zero.negate());
-+                        return x.newInstance(var_827);
-                     }
-                 } else {
-                     // Y is not odd integer
