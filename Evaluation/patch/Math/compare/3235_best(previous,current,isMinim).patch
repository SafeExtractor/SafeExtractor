diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/3235_best(previous,current,isMinim).patch b/Users/safe/paper/Evaluation/patch/Math/ours/3235_best(previous,current,isMinim).patch
index 7a01741..45db9d1 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/3235_best(previous,current,isMinim).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/3235_best(previous,current,isMinim).patch
@@ -1,38 +1,20 @@
 diff --git a/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
-index a5fca86..8cae449 100644
+index a5fca86..835ce9d 100644
 --- a/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
 +++ b/src/main/java/org/apache/commons/math3/optim/univariate/BrentOptimizer.java
-@@ -158,7 +158,10 @@
- 
-             // Default stopping criterion.
-             final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a);
--            if (!stop) {
-+            UnivariatePointValuePair var_3235 = best(previous,
-+			     current,
-+			     isMinim);
-+			if (!stop) {
-                 double p = 0;
-                 double q = 0;
-                 double r = 0;
-@@ -233,9 +236,7 @@
+@@ -232,10 +232,11 @@
+                 // User-defined convergence checker.
                  previous = current;
                  current = new UnivariatePointValuePair(u, isMinim ? fu : -fu);
-                 best = best(best,
+-                best = best(best,
 -                            best(previous,
 -                                 current,
 -                                 isMinim),
++                UnivariatePointValuePair var_3235 = best(previous,
++				     current,
++				     isMinim);
++				best = best(best,
 +                            var_3235,
                              isMinim);
  
                  if (checker != null && checker.converged(iter, previous, current)) {
-@@ -276,9 +277,7 @@
-                 }
-             } else { // Default termination (Brent's criterion).
-                 return best(best,
--                            best(previous,
--                                 current,
--                                 isMinim),
-+                            var_3235,
-                             isMinim);
-             }
-             ++iter;
