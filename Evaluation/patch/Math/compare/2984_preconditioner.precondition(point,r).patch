diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/2984_preconditioner.precondition(point,r).patch b/Users/safe/paper/Evaluation/patch/Math/ours/2984_preconditioner.precondition(point,r).patch
index b19096f..5439dd0 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/2984_preconditioner.precondition(point,r).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/2984_preconditioner.precondition(point,r).patch
@@ -1,23 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
-index 6b6afa2..e87e45e 100644
+index 6b6afa2..b86011b 100644
 --- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
 +++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
-@@ -202,7 +202,8 @@
-         }
- 
-         // Initial search direction.
--        double[] steepestDescent = preconditioner.precondition(point, r);
-+        double[] var_2984 = preconditioner.precondition(point, r);
-+		double[] steepestDescent = var_2984;
-         double[] searchDirection = steepestDescent.clone();
- 
-         double delta = 0;
-@@ -246,7 +247,7 @@
+@@ -246,7 +246,8 @@
  
              // Compute beta.
              final double deltaOld = delta;
 -            final double[] newSteepestDescent = preconditioner.precondition(point, r);
-+            final double[] newSteepestDescent = var_2984;
++            double[] var_2984 = preconditioner.precondition(point, r);
++			final double[] newSteepestDescent = var_2984;
              delta = 0;
              for (int i = 0; i < n; ++i) {
                  delta += r[i] * newSteepestDescent[i];
