diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/3273_max(diagD).patch b/Users/safe/paper/Evaluation/patch/Math/ours/3273_max(diagD).patch
index 6bfcb01..9b244ab 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/3273_max(diagD).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/3273_max(diagD).patch
@@ -1,28 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
-index 104bdf5..ed8d94d 100644
+index 104bdf5..894d0f6 100644
 --- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
 +++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
-@@ -900,18 +900,19 @@
-             B = eig.getV(); // eigen decomposition, B==normalized eigenvectors
-             D = eig.getD();
-             diagD = diag(D);
--            if (min(diagD) <= 0) {
-+            double var_3273 = max(diagD);
-+			if (min(diagD) <= 0) {
-                 for (int i = 0; i < dimension; i++) {
-                     if (diagD.getEntry(i, 0) < 0) {
+@@ -906,7 +906,8 @@
                          diagD.setEntry(i, 0, 0);
                      }
                  }
 -                final double tfac = max(diagD) / 1e14;
-+                final double tfac = var_3273 / 1e14;
-                 C = C.add(eye(dimension, dimension).scalarMultiply(tfac));
-                 diagD = diagD.add(ones(dimension, 1).scalarMultiply(tfac));
-             }
--            if (max(diagD) > 1e14 * min(diagD)) {
--                final double tfac = max(diagD) / 1e14 - min(diagD);
-+            if (var_3273 > 1e14 * min(diagD)) {
-+                final double tfac = var_3273 / 1e14 - min(diagD);
++                double var_3273 = max(diagD);
++				final double tfac = var_3273 / 1e14;
                  C = C.add(eye(dimension, dimension).scalarMultiply(tfac));
                  diagD = diagD.add(ones(dimension, 1).scalarMultiply(tfac));
              }
