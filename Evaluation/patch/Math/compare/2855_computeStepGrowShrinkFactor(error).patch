diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/2855_computeStepGrowShrinkFactor(error).patch b/Users/safe/paper/Evaluation/patch/Math/ours/2855_computeStepGrowShrinkFactor(error).patch
index 31ed342..3300e45 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/2855_computeStepGrowShrinkFactor(error).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/2855_computeStepGrowShrinkFactor(error).patch
@@ -1,32 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
-index d15dc73..362099e 100644
+index d15dc73..fccd808 100644
 --- a/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
 +++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/AdamsBashforthIntegrator.java
-@@ -227,7 +227,8 @@
-         do {
- 
-             double error = 10;
--            while (error >= 1.0) {
-+            double var_2855 = computeStepGrowShrinkFactor(error);
-+			while (error >= 1.0) {
- 
-                 stepSize = hNew;
- 
-@@ -245,7 +246,7 @@
- 
-                 if (error >= 1.0) {
-                     // reject the step and attempt to reduce error by stepsize control
--                    final double factor = computeStepGrowShrinkFactor(error);
-+                    final double factor = var_2855;
-                     hNew = filterStep(stepSize * factor, forward, false);
-                     interpolator.rescale(hNew);
- 
-@@ -297,7 +298,7 @@
+@@ -297,7 +297,8 @@
                  }
  
                  // stepsize control for next step
 -                final double  factor     = computeStepGrowShrinkFactor(error);
-+                final double  factor     = var_2855;
++                double var_2855 = computeStepGrowShrinkFactor(error);
++				final double  factor     = var_2855;
                  final double  scaledH    = stepSize * factor;
                  final double  nextT      = stepStart + scaledH;
                  final boolean nextIsLast = forward ? (nextT >= t) : (nextT <= t);
