diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/831_x.newInstance((byte)1,Dfp.QNAN).patch b/Users/safe/paper/Evaluation/patch/Math/ours/831_x.newInstance((byte)1,Dfp.QNAN).patch
index dc82269..7088540 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/831_x.newInstance((byte)1,Dfp.QNAN).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/831_x.newInstance((byte)1,Dfp.QNAN).patch
@@ -1,24 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
-index af670fc..0b4b489 100644
+index af670fc..7c999d8 100644
 --- a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
 +++ b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
-@@ -532,10 +532,11 @@
-             return x;
+@@ -589,9 +589,10 @@
+             }
          }
  
--        if (x.isNaN() || y.isNaN()) {
+-        if (x.equals(one) && y.classify() == Dfp.INFINITE) {
 +        Dfp var_831 = x.newInstance((byte)1, Dfp.QNAN);
-+		if (x.isNaN() || y.isNaN()) {
-             // Test for NaNs
-             x.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
--            return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
-+            return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, var_831);
-         }
- 
-         // X == 0
-@@ -591,7 +592,7 @@
- 
-         if (x.equals(one) && y.classify() == Dfp.INFINITE) {
++		if (x.equals(one) && y.classify() == Dfp.INFINITE) {
              x.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
 -            return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
 +            return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, var_831);
