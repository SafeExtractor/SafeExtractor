diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/2093_FastMath.sqrt(xNormSqr).patch b/Users/safe/paper/Evaluation/patch/Math/ours/2093_FastMath.sqrt(xNormSqr).patch
index 995aaab..b1092cb 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/2093_FastMath.sqrt(xNormSqr).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/2093_FastMath.sqrt(xNormSqr).patch
@@ -1,23 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java b/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
-index c2c5002..53328e7 100644
+index c2c5002..c7f7ab6 100644
 --- a/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
 +++ b/src/main/java/org/apache/commons/math3/linear/BiDiagonalTransformer.java
-@@ -267,7 +267,8 @@
-                 xNormSqr += c * c;
-             }
-             final double[] hK = householderVectors[k];
--            final double a = (hK[k] > 0) ? -FastMath.sqrt(xNormSqr) : FastMath.sqrt(xNormSqr);
-+            double var_2093 = FastMath.sqrt(xNormSqr);
-+			final double a = (hK[k] > 0) ? -var_2093 : var_2093;
-             main[k] = a;
-             if (a != 0.0) {
-                 hK[k] -= a;
-@@ -292,7 +293,7 @@
+@@ -292,7 +292,8 @@
                      final double c = hK[j];
                      xNormSqr += c * c;
                  }
 -                final double b = (hK[k + 1] > 0) ? -FastMath.sqrt(xNormSqr) : FastMath.sqrt(xNormSqr);
-+                final double b = (hK[k + 1] > 0) ? -var_2093 : var_2093;
++                double var_2093 = FastMath.sqrt(xNormSqr);
++				final double b = (hK[k + 1] > 0) ? -var_2093 : var_2093;
                  secondary[k] = b;
                  if (b != 0.0) {
                      hK[k + 1] -= b;
