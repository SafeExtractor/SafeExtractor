diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/2042_lu[nonZero].patch b/Users/safe/paper/Evaluation/patch/Math/ours/2042_lu[nonZero].patch
index 51cb5df..f7fb613 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/2042_lu[nonZero].patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/2042_lu[nonZero].patch
@@ -1,34 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java b/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
-index 513606d..c205027 100644
+index 513606d..022b0b6 100644
 --- a/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
 +++ b/src/main/java/org/apache/commons/math3/linear/FieldLUDecomposition.java
-@@ -120,7 +120,8 @@
- 
-             // lower
-             int nonZero = col; // permutation row
--            for (int row = col; row < m; row++) {
-+            T[] var_2042 = lu[nonZero];
-+			for (int row = col; row < m; row++) {
-                 final T[] luRow = lu[row];
-                 sum = luRow[col];
-                 for (int i = 0; i < col; i++) {
-@@ -128,7 +129,7 @@
+@@ -128,7 +128,8 @@
                  }
                  luRow[col] = sum;
  
 -                if (lu[nonZero][col].equals(field.getZero())) {
-+                if (var_2042[col].equals(field.getZero())) {
++                T[] var_2042 = lu[nonZero];
++				if (var_2042[col].equals(field.getZero())) {
                      // try to select a better permutation choice
                      ++nonZero;
                  }
-@@ -144,8 +145,8 @@
-             if (nonZero != col) {
-                 T tmp = field.getZero();
-                 for (int i = 0; i < m; i++) {
--                    tmp = lu[nonZero][i];
--                    lu[nonZero][i] = lu[col][i];
-+                    tmp = var_2042[i];
-+                    var_2042[i] = lu[col][i];
-                     lu[col][i] = tmp;
-                 }
-                 int temp = pivot[nonZero];
