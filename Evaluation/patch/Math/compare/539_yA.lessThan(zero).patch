diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/539_yA.lessThan(zero).patch b/Users/safe/paper/Evaluation/patch/Math/ours/539_yA.lessThan(zero).patch
index 2ecfff6..9aa48fe 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/539_yA.lessThan(zero).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/539_yA.lessThan(zero).patch
@@ -1,26 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java b/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
-index 372c699..b528511 100644
+index 372c699..f0f2363 100644
 --- a/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
 +++ b/src/main/java/org/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP.java
-@@ -265,7 +265,8 @@
-             final Dfp xTol = absoluteAccuracy.add(relativeAccuracy.multiply(maxX));
-             if (xB.subtract(xA).subtract(xTol).negativeOrNull() ||
-                 maxY.lessThan(functionValueAccuracy)) {
--                switch (allowedSolution) {
-+                boolean var_539 = yA.lessThan(zero);
-+				switch (allowedSolution) {
-                 case ANY_SIDE :
-                     return absYA.lessThan(absYB) ? xA : xB;
-                 case LEFT_SIDE :
-@@ -273,9 +274,9 @@
-                 case RIGHT_SIDE :
-                     return xB;
+@@ -275,7 +275,8 @@
                  case BELOW_SIDE :
--                    return yA.lessThan(zero) ? xA : xB;
-+                    return var_539 ? xA : xB;
+                     return yA.lessThan(zero) ? xA : xB;
                  case ABOVE_SIDE :
 -                    return yA.lessThan(zero) ? xB : xA;
-+                    return var_539 ? xB : xA;
++                    boolean var_539 = yA.lessThan(zero);
++					return var_539 ? xB : xA;
                  default :
                      // this should never happen
                      throw new MathInternalError(null);
