diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/2980_steepestDescent.clone().patch b/Users/safe/paper/Evaluation/patch/Math/ours/2980_steepestDescent.clone().patch
index 8e57e09..25dbac2 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/2980_steepestDescent.clone().patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/2980_steepestDescent.clone().patch
@@ -1,5 +1,5 @@
 diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
-index 6b6afa2..d61169e 100644
+index 6b6afa2..edce3b4 100644
 --- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
 +++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer.java
 @@ -203,7 +203,8 @@
@@ -12,12 +12,3 @@ index 6b6afa2..d61169e 100644
  
          double delta = 0;
          for (int i = 0; i < n; ++i) {
-@@ -274,7 +275,7 @@
-             if (getIterations() % n == 0 ||
-                 beta < 0) {
-                 // Break conjugation: reset search direction.
--                searchDirection = steepestDescent.clone();
-+                searchDirection = var_2980;
-             } else {
-                 // Compute new conjugate search direction.
-                 for (int i = 0; i < n; ++i) {
