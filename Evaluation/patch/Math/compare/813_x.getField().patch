diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/813_x.getField().patch b/Users/safe/paper/Evaluation/patch/Math/ours/813_x.getField().patch
index f5622c5..0f40928 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/813_x.getField().patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/813_x.getField().patch
@@ -1,5 +1,5 @@
 diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
-index af670fc..7a5ce75 100644
+index af670fc..0650786 100644
 --- a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
 +++ b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
 @@ -505,8 +505,9 @@
@@ -32,33 +32,3 @@ index af670fc..7a5ce75 100644
              return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
          }
  
-@@ -590,7 +591,7 @@
-         }
- 
-         if (x.equals(one) && y.classify() == Dfp.INFINITE) {
--            x.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
-+            var_813.setIEEEFlagsBits(DfpField.FLAG_INVALID);
-             return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
-         }
- 
-@@ -624,7 +625,7 @@
-         }
- 
-         if (invert && !y.rint().equals(y)) {
--            x.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
-+            var_813.setIEEEFlagsBits(DfpField.FLAG_INVALID);
-             return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
-         }
- 
-@@ -639,9 +640,9 @@
- 
-             if (v.unequal(zero)) {
-                 final Dfp a = v.multiply(log(x));
--                final Dfp b = a.divide(x.getField().getLn2()).rint();
-+                final Dfp b = a.divide(var_813.getLn2()).rint();
- 
--                final Dfp c = a.subtract(b.multiply(x.getField().getLn2()));
-+                final Dfp c = a.subtract(b.multiply(var_813.getLn2()));
-                 r = splitPow(split(x), ui);
-                 r = r.multiply(pow(two, b.intValue()));
-                 r = r.multiply(exp(c));
