diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/1857_FastMath.hypot(f,g).patch b/Users/safe/paper/Evaluation/patch/Math/ours/1857_FastMath.hypot(f,g).patch
index 07061f9..bf7b0ba 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/1857_FastMath.hypot(f,g).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/1857_FastMath.hypot(f,g).patch
@@ -1,23 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java b/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
-index efbe8a2..2f084fd 100644
+index efbe8a2..09947ec 100644
 --- a/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
 +++ b/src/main/java/org/apache/commons/math3/linear/SingularValueDecomposition.java
-@@ -397,7 +397,8 @@
-                     double g = sk * ek;
-                     // Chase zeros.
-                     for (int j = k; j < p - 1; j++) {
--                        double t = FastMath.hypot(f, g);
-+                        double var_1857 = FastMath.hypot(f, g);
-+						double t = var_1857;
-                         double cs = f / t;
-                         double sn = g / t;
-                         if (j != k) {
-@@ -413,7 +414,7 @@
+@@ -413,7 +413,8 @@
                              V[i][j + 1] = -sn * V[i][j] + cs * V[i][j + 1];
                              V[i][j] = t;
                          }
 -                        t = FastMath.hypot(f, g);
-+                        t = var_1857;
++                        double var_1857 = FastMath.hypot(f, g);
++						t = var_1857;
                          cs = f / t;
                          sn = g / t;
                          singularValues[j] = t;
