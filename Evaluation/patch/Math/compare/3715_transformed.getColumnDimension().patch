diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/3715_transformed.getColumnDimension().patch b/Users/safe/paper/Evaluation/patch/Math/ours/3715_transformed.getColumnDimension().patch
index ab5265d..2c7f6c9 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/3715_transformed.getColumnDimension().patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/3715_transformed.getColumnDimension().patch
@@ -1,32 +1,14 @@
 diff --git a/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java b/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
-index 14c48c6..a8bba85 100644
+index 14c48c6..183ffd9 100644
 --- a/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
 +++ b/src/main/java/org/apache/commons/math3/stat/correlation/SpearmansCorrelation.java
-@@ -194,7 +194,8 @@
-     private RealMatrix rankTransform(final RealMatrix matrix) {
-         RealMatrix transformed = null;
- 
--        if (rankingAlgorithm instanceof NaturalRanking &&
-+        int var_3715 = transformed.getColumnDimension();
-+		if (rankingAlgorithm instanceof NaturalRanking &&
-                 ((NaturalRanking) rankingAlgorithm).getNanStrategy() == NaNStrategy.REMOVED) {
-             final Set<Integer> nanPositions = new HashSet<Integer>();
-             for (int i = 0; i < matrix.getColumnDimension(); i++) {
-@@ -205,7 +206,7 @@
-             if (!nanPositions.isEmpty()) {
-                 transformed = new BlockRealMatrix(matrix.getRowDimension() - nanPositions.size(),
-                                                   matrix.getColumnDimension());
--                for (int i = 0; i < transformed.getColumnDimension(); i++) {
-+                for (int i = 0; i < var_3715; i++) {
-                     transformed.setColumn(i, removeValues(matrix.getColumn(i), nanPositions));
-                 }
-             }
-@@ -215,7 +216,7 @@
+@@ -215,7 +215,8 @@
              transformed = matrix.copy();
          }
  
 -        for (int i = 0; i < transformed.getColumnDimension(); i++) {
-+        for (int i = 0; i < var_3715; i++) {
++        int var_3715 = transformed.getColumnDimension();
++		for (int i = 0; i < var_3715; i++) {
              transformed.setColumn(i, rankingAlgorithm.rank(transformed.getColumn(i)));
          }
  
