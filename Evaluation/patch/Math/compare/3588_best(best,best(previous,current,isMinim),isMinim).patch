diff --git a/Users/safe/paper/Evaluation/patch/Math/eclipse/3588_best(best,best(previous,current,isMinim),isMinim).patch b/Users/safe/paper/Evaluation/patch/Math/ours/3588_best(best,best(previous,current,isMinim),isMinim).patch
index 3038339..51cf0ee 100644
--- a/Users/safe/paper/Evaluation/patch/Math/eclipse/3588_best(best,best(previous,current,isMinim),isMinim).patch
+++ b/Users/safe/paper/Evaluation/patch/Math/ours/3588_best(best,best(previous,current,isMinim),isMinim).patch
@@ -1,44 +1,18 @@
 diff --git a/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
-index 20d0980..97f107c 100644
+index 20d0980..56ab3c7 100644
 --- a/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
 +++ b/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java
-@@ -160,7 +160,12 @@
- 
-             // Default stopping criterion.
-             final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a);
--            if (!stop) {
-+            UnivariatePointValuePair var_3588 = best(best,
-+			            best(previous,
-+			                 current,
-+			                 isMinim),
-+			            isMinim);
-+			if (!stop) {
-                 double p = 0;
-                 double q = 0;
-                 double r = 0;
-@@ -234,11 +239,7 @@
+@@ -234,11 +234,12 @@
                  // User-defined convergence checker.
                  previous = current;
                  current = new UnivariatePointValuePair(u, isMinim ? fu : -fu);
 -                best = best(best,
--                            best(previous,
--                                 current,
--                                 isMinim),
--                            isMinim);
-+                best = var_3588;
++                UnivariatePointValuePair var_3588 = best(best,
+                             best(previous,
+                                  current,
+                                  isMinim),
+                             isMinim);
++				best = var_3588;
  
                  if (checker != null && checker.converged(iter, previous, current)) {
                      return best;
-@@ -277,11 +278,7 @@
-                     }
-                 }
-             } else { // Default termination (Brent's criterion).
--                return best(best,
--                            best(previous,
--                                 current,
--                                 isMinim),
--                            isMinim);
-+                return var_3588;
-             }
-             ++iter;
-         }
