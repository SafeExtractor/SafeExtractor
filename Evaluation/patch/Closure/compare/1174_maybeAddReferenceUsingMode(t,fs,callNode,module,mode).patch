diff --git a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1174_maybeAddReferenceUsingMode(t,fs,callNode,module,mode).patch b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1174_maybeAddReferenceUsingMode(t,fs,callNode,module,mode).patch
index 2925b87..947c07a 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1174_maybeAddReferenceUsingMode(t,fs,callNode,module,mode).patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1174_maybeAddReferenceUsingMode(t,fs,callNode,module,mode).patch
@@ -1,8 +1,8 @@
 diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
-index 008ffe5..7111fb9 100644
+index 008ffe5..f471bf7 100644
 --- a/src/com/google/javascript/jscomp/InlineFunctions.java
 +++ b/src/com/google/javascript/jscomp/InlineFunctions.java
-@@ -496,15 +496,15 @@
+@@ -496,8 +496,9 @@
        boolean referenceAdded = false;
        InliningMode mode = fs.canInlineDirectly()
             ? InliningMode.DIRECT : InliningMode.BLOCK;
@@ -13,11 +13,3 @@ index 008ffe5..7111fb9 100644
        if (!referenceAdded &&
            mode == InliningMode.DIRECT && blockFunctionInliningEnabled) {
          // This reference can not be directly inlined, see if
-         // block replacement inlining is possible.
-         mode = InliningMode.BLOCK;
--        referenceAdded = maybeAddReferenceUsingMode(
--            t, fs, callNode, module, mode);
-+        referenceAdded = var_1174;
-       }
- 
-       if (!referenceAdded) {
