diff --git a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1262_v.getParentNode().patch b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1262_v.getParentNode().patch
index a70727d..fcd929b 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1262_v.getParentNode().patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1262_v.getParentNode().patch
@@ -1,23 +1,14 @@
 diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
-index 98b136e..bf497cf 100644
+index 98b136e..8ae7dfd 100644
 --- a/src/com/google/javascript/jscomp/Normalize.java
 +++ b/src/com/google/javascript/jscomp/Normalize.java
-@@ -733,7 +733,8 @@
-       }
- 
-       // If name is "arguments", Var maybe null.
--      if (v != null && v.getParentNode().isCatch()) {
-+      Node var_1262 = v.getParentNode();
-+	if (v != null && var_1262.isCatch()) {
-         // Redeclaration of a catch expression variable is hard to model
-         // without support for "with" expressions.
-         // The ECMAScript spec (section 12.14), declares that a catch
-@@ -756,11 +757,11 @@
+@@ -756,11 +756,12 @@
                  input.getName(), n,
                  CATCH_BLOCK_VAR_ERROR, name));
        } else if (v != null && parent.isFunction()) {
 -        if (v.getParentNode().isVar()) {
-+        if (var_1262.isVar()) {
++        Node var_1262 = v.getParentNode();
++		if (var_1262.isVar()) {
            s.undeclare(v);
            s.declare(name, n, n.getJSType(), v.input);
 -          replaceVarWithAssignment(v.getNameNode(), v.getParentNode(),
