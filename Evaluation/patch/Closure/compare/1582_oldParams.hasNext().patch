diff --git a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1582_oldParams.hasNext().patch b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1582_oldParams.hasNext().patch
index a235d4e..dee2e3a 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1582_oldParams.hasNext().patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1582_oldParams.hasNext().patch
@@ -1,26 +1,14 @@
 diff --git a/src/com/google/javascript/jscomp/FunctionTypeBuilder.java b/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
-index db990fa..4895371 100644
+index db990fa..8c013d3 100644
 --- a/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
 +++ b/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
-@@ -252,9 +252,10 @@
-       Iterator<Node> oldParams = oldType.getParameters().iterator();
-       boolean warnedAboutArgList = false;
+@@ -254,7 +254,8 @@
        boolean oldParamsListHitOptArgs = false;
--      for (Node currentParam = paramsParent.getFirstChild();
-+      boolean var_1582 = oldParams.hasNext();
-+	for (Node currentParam = paramsParent.getFirstChild();
+       for (Node currentParam = paramsParent.getFirstChild();
             currentParam != null; currentParam = currentParam.getNext()) {
 -        if (oldParams.hasNext()) {
-+        if (var_1582) {
++        boolean var_1582 = oldParams.hasNext();
++		if (var_1582) {
            Node oldParam = oldParams.next();
            Node newParam = paramBuilder.newParameterFromNode(oldParam);
  
-@@ -281,7 +282,7 @@
- 
-       // Clone any remaining params that aren't in the function literal,
-       // but make them optional.
--      while (oldParams.hasNext()) {
-+      while (var_1582) {
-         paramBuilder.newOptionalParameterFromNode(oldParams.next());
-       }
- 
