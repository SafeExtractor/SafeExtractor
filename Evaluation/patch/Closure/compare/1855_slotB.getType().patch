diff --git a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1855_slotB.getType().patch b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1855_slotB.getType().patch
index bfb65b0..cc58b49 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/1855_slotB.getType().patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/1855_slotB.getType().patch
@@ -1,29 +1,45 @@
 diff --git a/src/com/google/javascript/jscomp/LinkedFlowScope.java b/src/com/google/javascript/jscomp/LinkedFlowScope.java
-index a97d855..5818589 100644
+index a97d855..75e6f1f 100644
 --- a/src/com/google/javascript/jscomp/LinkedFlowScope.java
 +++ b/src/com/google/javascript/jscomp/LinkedFlowScope.java
-@@ -448,7 +448,8 @@
-         StaticSlot<JSType> slotB = slotsB.get(name);
- 
-         JSType joinedType = null;
--        if (slotB == null || slotB.getType() == null) {
-+        JSType var_1855 = slotB.getType();
-+		if (slotB == null || var_1855 == null) {
-           StaticSlot<JSType> fnSlot
-               = joinedScopeB.getFunctionScope().getSlot(name);
-           JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
-@@ -467,12 +468,12 @@
-             symbols.put(name, slotB);
-           } else {
-             // Case #4
--            joinedType = slotB.getType().getLeastSupertype(fnSlotType);
-+            joinedType = var_1855.getLeastSupertype(fnSlotType);
+@@ -458,22 +458,25 @@
+             // Case #3
+             joinedType = slotA.getType().getLeastSupertype(fnSlotType);
            }
+-        } else if (slotA == null || slotA.getType() == null) {
+-          StaticSlot<JSType> fnSlot
+-              = joinedScopeA.getFunctionScope().getSlot(name);
+-          JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
+-          if (fnSlotType == null) {
+-            // Case #2
+-            symbols.put(name, slotB);
+-          } else {
+-            // Case #4
+-            joinedType = slotB.getType().getLeastSupertype(fnSlotType);
+-          }
          } else {
-           // Case #5
-           joinedType =
+-          // Case #5
+-          joinedType =
 -              slotA.getType().getLeastSupertype(slotB.getType());
-+              slotA.getType().getLeastSupertype(var_1855);
-         }
+-        }
++			JSType var_1855 = slotB.getType();
++			if (slotA == null || slotA.getType() == null) {
++			  StaticSlot<JSType> fnSlot
++			      = joinedScopeA.getFunctionScope().getSlot(name);
++			  JSType fnSlotType = fnSlot == null ? null : fnSlot.getType();
++			  if (fnSlotType == null) {
++			    // Case #2
++			    symbols.put(name, slotB);
++			  } else {
++			    // Case #4
++			    joinedType = var_1855.getLeastSupertype(fnSlotType);
++			  }
++			} else {
++			  // Case #5
++			  joinedType =
++			      slotA.getType().getLeastSupertype(var_1855);
++			}
++		}
  
          if (joinedType != null) {
+           symbols.put(name, new SimpleSlot(name, joinedType, true));
