diff --git a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/2281_Token.typeToName(node.getType()).patch b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/2281_Token.typeToName(node.getType()).patch
index a20cec2..edf4876 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Closure/eclipse/2281_Token.typeToName(node.getType()).patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Closure/ours/2281_Token.typeToName(node.getType()).patch
@@ -1,28 +1,14 @@
 diff --git a/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java b/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java
-index 95aaacd..90f4842 100644
+index 95aaacd..2b84f23 100644
 --- a/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java
 +++ b/src/com/google/javascript/jscomp/parsing/TypeSafeDispatcher.java
-@@ -118,7 +118,8 @@
-   abstract T processIllegalToken(AstNode node);
- 
-   public T process(AstNode node) {
--    switch (node.getType()) {
-+    String var_2281 = Token.typeToName(node.getType());
-+	switch (node.getType()) {
-       case Token.ADD:
-       case Token.AND:
-       case Token.BITAND:
-@@ -178,7 +179,7 @@
-           throw new IllegalStateException("Unexpected node type.  class: " +
-                                           node.getClass() +
-                                           " type: " +
--                                          Token.typeToName(node.getType()));
-+                                          var_2281);
-         }
-       case Token.BREAK:
-         return processBreakStatement((BreakStatement) node);
-@@ -209,7 +210,7 @@
-           throw new IllegalStateException("Unexpected node type.  class: " +
+@@ -206,10 +206,11 @@
+         } else  if (node instanceof LabeledStatement) {
+           return processLabeledStatement((LabeledStatement) node);
+         } else {
+-          throw new IllegalStateException("Unexpected node type.  class: " +
++          String var_2281 = Token.typeToName(node.getType());
++		throw new IllegalStateException("Unexpected node type.  class: " +
                                            node.getClass() +
                                            " type: " +
 -                                          Token.typeToName(node.getType()));
@@ -30,21 +16,3 @@ index 95aaacd..90f4842 100644
          }
        case Token.DEBUGGER:
        case Token.FALSE:
-@@ -226,7 +227,7 @@
-           throw new IllegalStateException("Unexpected node type.  class: " +
-                                           node.getClass() +
-                                           " type: " +
--                                          Token.typeToName(node.getType()));
-+                                          var_2281);
-         }
-       case Token.FUNCTION:
-         return processFunctionNode((FunctionNode) node);
-@@ -274,7 +275,7 @@
-           throw new IllegalStateException("Unexpected node type.  class: " +
-                                           node.getClass() +
-                                           " type: " +
--                                          Token.typeToName(node.getType()));
-+                                          var_2281);
-         }
-       case Token.WHILE:
-         return processWhileLoop((WhileLoop) node);
