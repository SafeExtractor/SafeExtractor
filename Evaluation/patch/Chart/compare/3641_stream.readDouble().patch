diff --git a/Users/safe/paper/Evaluation/patch/Chart/eclipse/3641_stream.readDouble().patch b/Users/safe/paper/Evaluation/patch/Chart/ours/3641_stream.readDouble().patch
index 1b1aea2..9d28f89 100644
--- a/Users/safe/paper/Evaluation/patch/Chart/eclipse/3641_stream.readDouble().patch
+++ b/Users/safe/paper/Evaluation/patch/Chart/ours/3641_stream.readDouble().patch
@@ -1,59 +1,14 @@
 diff --git a/source/org/jfree/chart/util/SerialUtilities.java b/source/org/jfree/chart/util/SerialUtilities.java
-index 90edcc1..4f6fa66 100644
+index 90edcc1..55563b0 100644
 --- a/source/org/jfree/chart/util/SerialUtilities.java
 +++ b/source/org/jfree/chart/util/SerialUtilities.java
-@@ -276,34 +276,35 @@
-         boolean isNull = stream.readBoolean();
-         if (!isNull) {
-             Class c = (Class) stream.readObject();
--            if (c.equals(Line2D.class)) {
--                double x1 = stream.readDouble();
--                double y1 = stream.readDouble();
--                double x2 = stream.readDouble();
--                double y2 = stream.readDouble();
-+            double var_3641 = stream.readDouble();
-+			if (c.equals(Line2D.class)) {
-+                double x1 = var_3641;
-+                double y1 = var_3641;
-+                double x2 = var_3641;
-+                double y2 = var_3641;
-                 result = new Line2D.Double(x1, y1, x2, y2);
-             }
-             else if (c.equals(Rectangle2D.class)) {
--                double x = stream.readDouble();
--                double y = stream.readDouble();
--                double w = stream.readDouble();
--                double h = stream.readDouble();
-+                double x = var_3641;
-+                double y = var_3641;
-+                double w = var_3641;
-+                double h = var_3641;
+@@ -291,7 +291,8 @@
                  result = new Rectangle2D.Double(x, y, w, h);
              }
              else if (c.equals(Ellipse2D.class)) {
 -                double x = stream.readDouble();
--                double y = stream.readDouble();
--                double w = stream.readDouble();
--                double h = stream.readDouble();
-+                double x = var_3641;
-+                double y = var_3641;
-+                double w = var_3641;
-+                double h = var_3641;
-                 result = new Ellipse2D.Double(x, y, w, h);
-             }
-             else if (c.equals(Arc2D.class)) {
--                double x = stream.readDouble();
--                double y = stream.readDouble();
--                double w = stream.readDouble();
--                double h = stream.readDouble();
--                double as = stream.readDouble(); // Angle Start
--                double ae = stream.readDouble(); // Angle Extent
-+                double x = var_3641;
-+                double y = var_3641;
-+                double w = var_3641;
-+                double h = var_3641;
-+                double as = var_3641; // Angle Start
-+                double ae = var_3641; // Angle Extent
-                 int at = stream.readInt();       // Arc type
-                 result = new Arc2D.Double(x, y, w, h, as, ae, at);
-             }
++                double var_3641 = stream.readDouble();
++				double x = var_3641;
+                 double y = stream.readDouble();
+                 double w = stream.readDouble();
+                 double h = stream.readDouble();
