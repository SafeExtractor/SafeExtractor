diff --git a/source/org/jfree/data/time/DynamicTimeSeriesCollection.java b/source/org/jfree/data/time/DynamicTimeSeriesCollection.java
index 067e1df..085c01e 100644
--- a/source/org/jfree/data/time/DynamicTimeSeriesCollection.java
+++ b/source/org/jfree/data/time/DynamicTimeSeriesCollection.java
@@ -558,7 +558,8 @@
      * @return The new time period.
      */
     public synchronized RegularTimePeriod advanceTime() {
-        RegularTimePeriod nextInstant = this.pointsInTime[this.newestAt].next();
+        int var_4281 = this.newestAt;
+		RegularTimePeriod nextInstant = this.pointsInTime[var_4281].next();
         this.newestAt = this.oldestAt;  // newestAt takes value previously held
                                         // by oldestAT
         /***
@@ -585,10 +586,10 @@
         //  wipe the next (about to be used) set of data slots
         float wiper = (float) 0.0;
         for (int s = 0; s < getSeriesCount(); s++) {
-            this.valueHistory[s].enterData(this.newestAt, wiper);
+            this.valueHistory[s].enterData(var_4281, wiper);
         }
         // Update the array of TimePeriods:
-        this.pointsInTime[this.newestAt] = nextInstant;
+        this.pointsInTime[var_4281] = nextInstant;
         // Now advance "oldestAt", wrapping at end of the array
         this.oldestAt++;
         if (this.oldestAt >= this.historyCount) {
