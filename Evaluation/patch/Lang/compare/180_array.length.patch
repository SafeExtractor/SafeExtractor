diff --git a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/180_array.length.patch b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/180_array.length.patch
index a2b5819..e0f09ee 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/180_array.length.patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/180_array.length.patch
@@ -1,23 +1,20 @@
 diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-index a0a499a..bc4da82 100644
+index a0a499a..9d36566 100644
 --- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
 +++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-@@ -2847,13 +2847,14 @@
-      * @return an {@code int} array, {@code null} if null array input
-      */
+@@ -2849,9 +2849,12 @@
      public static int[] toPrimitive(final Integer[] array, final int valueForNull) {
--        if (array == null) {
-+        int var_180 = array.length;
-+		if (array == null) {
+         if (array == null) {
              return null;
 -        } else if (array.length == 0) {
-+        } else if (var_180 == 0) {
-             return EMPTY_INT_ARRAY;
-         }
--        final int[] result = new int[array.length];
--        for (int i = 0; i < array.length; i++) {
-+        final int[] result = new int[var_180];
-+        for (int i = 0; i < var_180; i++) {
+-            return EMPTY_INT_ARRAY;
+-        }
++        } else {
++			int var_180 = array.length;
++			if (var_180 == 0) {
++			    return EMPTY_INT_ARRAY;
++			}
++		}
+         final int[] result = new int[array.length];
+         for (int i = 0; i < array.length; i++) {
              final Integer b = array[i];
-             result[i] = (b == null ? valueForNull : b.intValue());
-         }
