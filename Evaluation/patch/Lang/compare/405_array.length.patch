diff --git a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/405_array.length.patch b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/405_array.length.patch
index 36aedbb..c9cbd4b 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/405_array.length.patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/405_array.length.patch
@@ -1,24 +1,20 @@
 diff --git a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
-index d85e91e..2eb6984 100644
+index d85e91e..52ecbae 100644
 --- a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
 +++ b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
-@@ -36,15 +36,16 @@
-      */
-     public static double min(final double[] array) {
+@@ -38,9 +38,12 @@
          // Validates input
--        if (array == null) {
-+        int var_405 = array.length;
-+		if (array == null) {
+         if (array == null) {
              throw new IllegalArgumentException("The Array must not be null");
 -        } else if (array.length == 0) {
-+        } else if (var_405 == 0) {
-             throw new IllegalArgumentException("Array cannot be empty.");
-         }
+-            throw new IllegalArgumentException("Array cannot be empty.");
+-        }
++        } else {
++			int var_405 = array.length;
++			if (var_405 == 0) {
++			    throw new IllegalArgumentException("Array cannot be empty.");
++			}
++		}
      
          // Finds and returns min
          double min = array[0];
--        for (int i = 1; i < array.length; i++) {
-+        for (int i = 1; i < var_405; i++) {
-             min = min(array[i], min);
-         }
-     
