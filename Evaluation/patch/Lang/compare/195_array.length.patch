diff --git a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/195_array.length.patch b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/195_array.length.patch
index ff61df2..27d8d57 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/195_array.length.patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/195_array.length.patch
@@ -1,22 +1,15 @@
 diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-index a0a499a..3fff0b4 100644
+index a0a499a..f42608a 100644
 --- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
 +++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-@@ -3187,13 +3187,14 @@
-      * @return a {@code boolean} array, {@code null} if null array input
-      */
-     public static boolean[] toPrimitive(final Boolean[] array, final boolean valueForNull) {
--        if (array == null) {
-+        int var_195 = array.length;
-+		if (array == null) {
-             return null;
--        } else if (array.length == 0) {
-+        } else if (var_195 == 0) {
+@@ -3192,8 +3192,9 @@
+         } else if (array.length == 0) {
              return EMPTY_BOOLEAN_ARRAY;
          }
 -        final boolean[] result = new boolean[array.length];
 -        for (int i = 0; i < array.length; i++) {
-+        final boolean[] result = new boolean[var_195];
++        int var_195 = array.length;
++		final boolean[] result = new boolean[var_195];
 +        for (int i = 0; i < var_195; i++) {
              final Boolean b = array[i];
              result[i] = (b == null ? valueForNull : b.booleanValue());
