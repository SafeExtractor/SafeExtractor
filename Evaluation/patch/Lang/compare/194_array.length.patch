diff --git a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/194_array.length.patch b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/194_array.length.patch
index ce8dfdd..675ea43 100644
--- a/home/safe/SafeExtractor/Evaluation/patch/Lang/eclipse/194_array.length.patch
+++ b/home/safe/SafeExtractor/Evaluation/patch/Lang/ours/194_array.length.patch
@@ -1,23 +1,20 @@
 diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-index a0a499a..1c58995 100644
+index a0a499a..e3471f9 100644
 --- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
 +++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
-@@ -3165,13 +3165,14 @@
-      * @throws NullPointerException if array content is {@code null}
-      */
+@@ -3167,9 +3167,12 @@
      public static boolean[] toPrimitive(final Boolean[] array) {
--        if (array == null) {
-+        int var_194 = array.length;
-+		if (array == null) {
+         if (array == null) {
              return null;
 -        } else if (array.length == 0) {
-+        } else if (var_194 == 0) {
-             return EMPTY_BOOLEAN_ARRAY;
-         }
--        final boolean[] result = new boolean[array.length];
--        for (int i = 0; i < array.length; i++) {
-+        final boolean[] result = new boolean[var_194];
-+        for (int i = 0; i < var_194; i++) {
+-            return EMPTY_BOOLEAN_ARRAY;
+-        }
++        } else {
++			int var_194 = array.length;
++			if (var_194 == 0) {
++			    return EMPTY_BOOLEAN_ARRAY;
++			}
++		}
+         final boolean[] result = new boolean[array.length];
+         for (int i = 0; i < array.length; i++) {
              result[i] = array[i].booleanValue();
-         }
-         return result;
